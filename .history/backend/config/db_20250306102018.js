require('dotenv').config(); // Load .env t·ª´ backend/
const mongoose = require('mongoose');

mongoose.set('strictQuery', true);

// Kh·ªüi t·∫°o retryCount n·∫øu ch∆∞a c√≥
global.retryCount = global.retryCount || 0;

// L·∫•y URI t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
const atlasUri = process.env.MONGO_URI;
if (!atlasUri) {
    console.error("‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y bi·∫øn m√¥i tr∆∞·ªùng MONGO_URI");
    process.exit(1);
}

// H√†m k·∫øt n·ªëi database
const connectDB = async () => {
    try {
        await mongoose.connect(atlasUri);
        console.log('‚úÖ K·∫øt n·ªëi MongoDB Atlas th√†nh c√¥ng!');
    } catch (error) {
        console.error('‚ùå L·ªói k·∫øt n·ªëi MongoDB:', error.message);
        if (global.retryCount < 5) {
            global.retryCount++;
            console.log(`üîÑ Th·ª≠ k·∫øt n·ªëi l·∫°i (${global.retryCount}/5)...`);
            setTimeout(connectDB, 5000);
        } else {
            console.error("üö® ƒê√£ th·ª≠ 5 l·∫ßn, d·ª´ng k·∫øt n·ªëi.");
            process.exit(1);
        }
    }
};

// X·ª≠ l√Ω s·ª± ki·ªán k·∫øt n·ªëi
mongoose.connection.on('connected', () => console.log('‚úÖ Mongoose ƒë√£ k·∫øt n·ªëi database.'));
mongoose.connection.on('disconnected', () => console.warn('‚ö†Ô∏è Mongoose m·∫•t k·∫øt n·ªëi.'));
mongoose.connection.on('error', (err) => console.error('‚ùå L·ªói Mongoose:', err.message));

// Export h√†m k·∫øt n·ªëi
module.exports = connectDB;